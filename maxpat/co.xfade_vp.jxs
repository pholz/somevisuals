<jittershader name="accum">
	<description>
	Accumulator
	</description>
	<param name="xfade" type="float" default="0.5" />
	<param name="xfadeA1" type="float" default="0.5" />
	<param name="xfadeA2" type="float" default="0.5" />
	<param name="xfadeB1" type="float" default="0.5" />
	<param name="xfadeB2" type="float" default="0.5" />
	<param name="mixGlobal" type ="float" default="0.5" />
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
    <param name="tex2" type="int" default="2" />
	<param name="tex3" type="int" default="3" />
	<param name="tex4" type="int" default="4" />
	<language name="glsl" version="1.0">
		<bind param="xfade" program="fp" />
		<bind param="xfadeA1" program="fp" />
		<bind param="xfadeA2" program="fp" />
		<bind param="xfadeB1" program="fp" />
		<bind param="xfadeB2" program="fp" />
		<bind param="mixGlobal" program="fp" />
		<bind param="tex0" program="fp" />
		<bind param="tex1" program="fp" />
		<bind param="tex2" program="fp" />
		<bind param="tex3" program="fp" />
		<bind param="tex4" program="fp" />
		<program name="vp" type="vertex" source="sh.passthru.xform.vp.glsl" />
		<program name="fp" type="fragment">
<![CDATA[

// texcoords
varying vec2 texcoord0;
varying vec2 texcoord1;
varying vec2 texcoord2;
varying vec2 texcoord3;
varying vec2 texcoord4;

// samplers
uniform sampler2DRect tex0;
uniform sampler2DRect tex1;
uniform sampler2DRect tex2;
uniform sampler2DRect tex3;
uniform sampler2DRect tex4;

// uniform parameters
uniform float xfade;
uniform float xfadeA1;
uniform float xfadeA2;
uniform float xfadeB1;
uniform float xfadeB2;
uniform float mixGlobal;

void main() {
	vec4 a1 = texture2DRect(tex0, texcoord0);
	vec4 a2 = texture2DRect(tex1, texcoord1);
	vec4 b1 = texture2DRect(tex2, texcoord2);
    vec4 b2 = texture2DRect(tex3, texcoord3);
	vec4 a = a1 * xfadeA1 + a2 * xfadeA2;

	const vec3 LumCoeff = vec3 (0.2125, 0.7154, 0.0721);
	a.rgb = vec3(dot(a.rgb, LumCoeff));
	b2.rgb = vec3(dot(b2.rgb, LumCoeff));

	vec4 b = b1 * xfadeB1 + b2 * xfadeB2;

	vec4 mixAB = mix(a, b, xfade);
	vec4 inputPH = texture2DRect(tex4, texcoord4);
	vec4 multRes = inputPH * mixAB;

	float mix1 = min(1.0, mixGlobal * 2.0);
	float mix2 = max(0.0, (mixGlobal-0.5) * 2.0);
	vec4 res1 = mix(mixAB, multRes, mix1);
	gl_FragColor = mix(res1, inputPH, mix2);
}

]]>
		</program>
	</language>
</jittershader>
